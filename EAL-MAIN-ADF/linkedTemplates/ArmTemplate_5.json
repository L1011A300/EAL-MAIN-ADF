{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "EAL-MAIN-ADF"
		},
		"Trigger_qk2_properties_pipeline_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowStartTime"
		},
		"Trigger_qk2_properties_pipeline_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().outputs.windowEndTime"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/flight_crew_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Populates flight crew data in SQL Server DB from SkedFlex.",
				"activities": [
					{
						"name": "SF flight crew data to Azure blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "user_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['user_id']"
										}
									},
									{
										"source": {
											"name": "position_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['position_id']"
										}
									},
									{
										"source": {
											"name": "position_code",
											"type": "String"
										},
										"sink": {
											"path": "$['position_code']"
										}
									},
									{
										"source": {
											"name": "trip_id",
											"type": "Int64"
										},
										"sink": {
											"path": "$['trip_id']"
										}
									},
									{
										"source": {
											"name": "flight_id",
											"type": "Int64"
										},
										"sink": {
											"path": "$['flight_id']"
										}
									},
									{
										"source": {
											"name": "is_deadhead",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_deadhead']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SF_source_bi_flight_crew",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SF_source_flight_crew",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "FLIGHTCREWblobtoSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SF flight crew data to Azure blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "FLIGHTCREWblobtoSQL",
								"type": "DataFlowReference",
								"parameters": {
									"run_id": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SFFlightCrew": {},
									"FLIGHTCREWtoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PROD"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/shift_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SF shift data to Azure blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "shift_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['shift_id']"
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['user_id']"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String"
										},
										"sink": {
											"path": "$['name']"
										}
									},
									{
										"source": {
											"name": "start_time",
											"type": "String"
										},
										"sink": {
											"path": "$['start_time']"
										}
									},
									{
										"source": {
											"name": "end_time",
											"type": "String"
										},
										"sink": {
											"path": "$['end_time']"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String"
										},
										"sink": {
											"path": "$['type']"
										}
									},
									{
										"source": {
											"name": "is_work",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_work']"
										}
									},
									{
										"source": {
											"name": "is_reserve",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_reserve']"
										}
									},
									{
										"source": {
											"name": "is_sick",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_sick']"
										}
									},
									{
										"source": {
											"name": "is_training",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_training']"
										}
									},
									{
										"source": {
											"name": "is_vacation",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_vacation']"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String"
										},
										"sink": {
											"path": "$['updated_at']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SF_source_bi_shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SF_source_shift",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SHIFTblobtoSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SF shift data to Azure blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SHIFTblobtoSQL",
								"type": "DataFlowReference",
								"parameters": {
									"run_id": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SFShift": {},
									"SHIFTtoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Inactive"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/user_category_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SF user category data to Azure blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "user_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['user_id']"
										}
									},
									{
										"source": {
											"name": "category_type",
											"type": "String"
										},
										"sink": {
											"path": "$['category_type']"
										}
									},
									{
										"source": {
											"name": "effective_start",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['effective_start']"
										}
									},
									{
										"source": {
											"name": "effective_end",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['effective_end']"
										}
									},
									{
										"source": {
											"name": "base_icao_code",
											"type": "String"
										},
										"sink": {
											"path": "$['base_icao_code']"
										}
									},
									{
										"source": {
											"name": "base_iata_code",
											"type": "String"
										},
										"sink": {
											"path": "$['base_iata_code']"
										}
									},
									{
										"source": {
											"name": "base_faa_code",
											"type": "String"
										},
										"sink": {
											"path": "$['base_faa_code']"
										}
									},
									{
										"source": {
											"name": "base_name",
											"type": "String"
										},
										"sink": {
											"path": "$['base_name']"
										}
									},
									{
										"source": {
											"name": "equipment_group_name",
											"type": "String"
										},
										"sink": {
											"path": "$['equipment_group_name']"
										}
									},
									{
										"source": {
											"name": "equipment_group_code",
											"type": "String"
										},
										"sink": {
											"path": "$['equipment_group_code']"
										}
									},
									{
										"source": {
											"name": "position_name",
											"type": "String"
										},
										"sink": {
											"path": "$['position_name']"
										}
									},
									{
										"source": {
											"name": "position_code",
											"type": "String"
										},
										"sink": {
											"path": "$['position_code']"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String"
										},
										"sink": {
											"path": "$['updated_at']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SF_source_bi_user_category",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SF_source_user_category",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "USERCATEGORYblobtoSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SF user category data to Azure blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "USERCATEGORYblobtoSQL",
								"type": "DataFlowReference",
								"parameters": {
									"run_id": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SFUserCategory": {},
									"USERCATEGORYtoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Inactive"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/user_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SF user data to Azure blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "user_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['user_id']"
										}
									},
									{
										"source": {
											"name": "payroll_id",
											"type": "Int32"
										},
										"sink": {
											"path": "$['payroll_id']"
										}
									},
									{
										"source": {
											"name": "employee_id",
											"type": "String"
										},
										"sink": {
											"path": "$['employee_id']"
										}
									},
									{
										"source": {
											"name": "username",
											"type": "String"
										},
										"sink": {
											"path": "$['username']"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String"
										},
										"sink": {
											"path": "$['first_name']"
										}
									},
									{
										"source": {
											"name": "middle_name",
											"type": "String"
										},
										"sink": {
											"path": "$['middle_name']"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String"
										},
										"sink": {
											"path": "$['last_name']"
										}
									},
									{
										"source": {
											"name": "preferred_nickname",
											"type": "String"
										},
										"sink": {
											"path": "$['preferred_nickname']"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"path": "$['email']"
										}
									},
									{
										"source": {
											"name": "pilot_license",
											"type": "String"
										},
										"sink": {
											"path": "$['pilot_license']"
										}
									},
									{
										"source": {
											"name": "phone_numbers",
											"type": "String"
										},
										"sink": {
											"path": "$['phone_numbers']"
										}
									},
									{
										"source": {
											"name": "date_of_birth",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['date_of_birth']"
										}
									},
									{
										"source": {
											"name": "date_of_hire",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['date_of_hire']"
										}
									},
									{
										"source": {
											"name": "date_of_longevity",
											"type": "DateTime"
										},
										"sink": {
											"path": "$['date_of_longevity']"
										}
									},
									{
										"source": {
											"name": "company_rank",
											"type": "Int32"
										},
										"sink": {
											"path": "$['company_rank']"
										}
									},
									{
										"source": {
											"name": "pilot_rank",
											"type": "Int32"
										},
										"sink": {
											"path": "$['pilot_rank']"
										}
									},
									{
										"source": {
											"name": "fa_rank",
											"type": "Int32"
										},
										"sink": {
											"path": "$['fa_rank']"
										}
									},
									{
										"source": {
											"name": "updated_at",
											"type": "String"
										},
										"sink": {
											"path": "$['updated_at']"
										}
									},
									{
										"source": {
											"name": "enabled",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['enabled']"
										}
									},
									{
										"source": {
											"name": "deleted",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['deleted']"
										}
									},
									{
										"source": {
											"name": "is_disabled",
											"type": "Boolean"
										},
										"sink": {
											"path": "$['is_disabled']"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SF_source_bi_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SF_source_user",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "USERblobtoSQL",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SF user data to Azure blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "USERblobtoSQL",
								"type": "DataFlowReference",
								"parameters": {
									"run_id": {
										"value": "'@{pipeline().RunId}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"SFUser": {},
									"USERtoSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"date": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Inactive"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLIGHT trigger 7am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_FLIGHT_PROD SQL Server table at 7 a.m. EDT",
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-06-28T11:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "EQUIP_SCHED trigger 7am",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLIGHT trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_FLIGHT_PROD SQL Server table",
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-06-16T09:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "EQUIP_SCHD trigger",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger_qk2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "TCN_COPY_TEST",
						"type": "PipelineReference"
					},
					"parameters": {
						"windowStart": {
							"type": "Expression",
							"value": "[parameters('Trigger_qk2_properties_pipeline_parameters_windowStart')]"
						},
						"windowEnd": {
							"type": "Expression",
							"value": "[parameters('Trigger_qk2_properties_pipeline_parameters_windowEnd')]"
						}
					}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2021-08-23T20:15:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIRPORT trigger 630 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_AIRPORT_PROD SQL Server table at 6:30 a.m. EDT",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Airport_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-08-16T10:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIRPORT trigger after midnight UTC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"Midnight UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Airport_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-11-08T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EQUIP_SCHED trigger every 2 hrs')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Runs Equip_Sched_data pipeline every two hours.",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Equip_sched_data",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2021-11-29T14:00:00Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Flight_Crew trigger 1am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"5:00 a.m. UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "flight_crew_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-10-02T05:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/flight_crew_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DELAYS trigger 630 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_DELAYS_PROD SQL Server table at 6:30 a.m. EDT",
				"annotations": [
					"10:30 a.m. UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Delay_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-08-16T10:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "-0:10:30:00",
							"referenceTrigger": {
								"referenceName": "AIRPORT trigger after midnight UTC",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/AIRPORT trigger after midnight UTC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLIGHT trigger after midnight UTC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"Midnight UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Flight_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-11-05T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "AIRPORT trigger after midnight UTC",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/AIRPORT trigger after midnight UTC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DELAYS trigger after midnight UTC')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"Midnight UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Delay_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-11-05T00:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "FLIGHT trigger after midnight UTC",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/FLIGHT trigger after midnight UTC')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EQUIP_SCHD trigger 630 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_EQUIP_SCHD_PROD SQL Server table at 6:30 a.m.",
				"annotations": [
					"10:30 a.m. UTC"
				],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-08-16T10:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "DELAYS trigger 630 am",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/DELAYS trigger 630 am')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FLIGHT trigger 630 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ETL populates dbo.SF_FLIGHT_PROD SQL Server table at 6:30 a.m. EDT",
				"annotations": [
					"10:30 a.m. UTC"
				],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "Flight_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2021-08-16T10:30:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"count": 5,
						"intervalInSeconds": 240
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "DELAYS trigger 630 am",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/DELAYS trigger 630 am')]"
			]
		}
	]
}
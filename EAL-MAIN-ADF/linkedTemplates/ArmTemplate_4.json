{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "EAL-MAIN-ADF"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SQL_FLIGHT_OFFLINE_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SQL_FLIGHT_OFFLINE_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_FLIGHT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "actual_arrival_airport",
						"type": "nvarchar"
					},
					{
						"name": "actual_arrive_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "actual_depart_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "actual_departure_airport",
						"type": "nvarchar"
					},
					{
						"name": "actual_oooi_in",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_off",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_on",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_out",
						"type": "datetime"
					},
					{
						"name": "aircraft_registration_number",
						"type": "nvarchar"
					},
					{
						"name": "aircraft_type",
						"type": "nvarchar"
					},
					{
						"name": "base_airport",
						"type": "nvarchar"
					},
					{
						"name": "base_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "cargo_off",
						"type": "int"
					},
					{
						"name": "cargo_on",
						"type": "int"
					},
					{
						"name": "cargo_weight",
						"type": "int"
					},
					{
						"name": "estimated_arrival",
						"type": "datetime"
					},
					{
						"name": "estimated_departure",
						"type": "datetime"
					},
					{
						"name": "flight_date",
						"type": "date"
					},
					{
						"name": "flight_id",
						"type": "int"
					},
					{
						"name": "flight_number",
						"type": "nvarchar"
					},
					{
						"name": "flight_type",
						"type": "nvarchar"
					},
					{
						"name": "fuel_in",
						"type": "float"
					},
					{
						"name": "fuel_out",
						"type": "float"
					},
					{
						"name": "fuel_uplift",
						"type": "int"
					},
					{
						"name": "fuel_uplifts",
						"type": "nvarchar"
					},
					{
						"name": "is_canceled",
						"type": "nvarchar"
					},
					{
						"name": "is_verified",
						"type": "nvarchar"
					},
					{
						"name": "lndg_actual_braking",
						"type": "nvarchar"
					},
					{
						"name": "lndg_midfield",
						"type": "nvarchar"
					},
					{
						"name": "lndg_rollout",
						"type": "nvarchar"
					},
					{
						"name": "lndg_touchdown_zone",
						"type": "nvarchar"
					},
					{
						"name": "maint_log_page",
						"type": "nvarchar"
					},
					{
						"name": "notes",
						"type": "nvarchar"
					},
					{
						"name": "ops_type",
						"type": "nvarchar"
					},
					{
						"name": "sched_arrive_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "sched_depart_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "scheduled_arrival",
						"type": "datetime2"
					},
					{
						"name": "scheduled_arrival_airport",
						"type": "nvarchar"
					},
					{
						"name": "scheduled_departure",
						"type": "datetime"
					},
					{
						"name": "scheduled_departure_airport",
						"type": "nvarchar"
					},
					{
						"name": "updated_at",
						"type": "datetime"
					},
					{
						"name": "ADF_TIMESTAMP",
						"type": "datetime",
						"scale": 7
					},
					{
						"name": "RUN_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_FLIGHT_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_FLT_TABLE_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "TEST Staging SQL Server table",
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "flight_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "flight_number",
						"type": "nvarchar"
					},
					{
						"name": "flight_date",
						"type": "date"
					},
					{
						"name": "aircraft_registration_number",
						"type": "nvarchar"
					},
					{
						"name": "aircraft_type",
						"type": "nvarchar"
					},
					{
						"name": "ops_type",
						"type": "nvarchar"
					},
					{
						"name": "scheduled_departure_airport",
						"type": "nvarchar"
					},
					{
						"name": "scheduled_arrival_airport",
						"type": "nvarchar"
					},
					{
						"name": "scheduled_departure",
						"type": "datetime"
					},
					{
						"name": "scheduled_arrival",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_out",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_off",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_on",
						"type": "datetime"
					},
					{
						"name": "actual_oooi_in",
						"type": "datetime"
					},
					{
						"name": "estimated_arrival",
						"type": "datetime"
					},
					{
						"name": "estimated_departure",
						"type": "datetime"
					},
					{
						"name": "base_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "sched_depart_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "sched_arrive_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "actual_depart_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "actual_arrive_airport_id",
						"type": "nvarchar"
					},
					{
						"name": "base_airport",
						"type": "nvarchar"
					},
					{
						"name": "actual_departure_airport",
						"type": "nvarchar"
					},
					{
						"name": "actual_arrival_airport",
						"type": "nvarchar"
					},
					{
						"name": "is_verified",
						"type": "nvarchar"
					},
					{
						"name": "notes",
						"type": "nvarchar"
					},
					{
						"name": "is_canceled",
						"type": "nvarchar"
					},
					{
						"name": "flight_type",
						"type": "nvarchar"
					},
					{
						"name": "cargo_weight",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cargo_on",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cargo_off",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fuel_out",
						"type": "float",
						"precision": 15
					},
					{
						"name": "fuel_in",
						"type": "float",
						"precision": 15
					},
					{
						"name": "fuel_uplift",
						"type": "int",
						"precision": 10
					},
					{
						"name": "fuel_uplifts",
						"type": "nvarchar"
					},
					{
						"name": "maint_log_page",
						"type": "nvarchar"
					},
					{
						"name": "lndg_touchdown_zone",
						"type": "nvarchar"
					},
					{
						"name": "lndg_midfield",
						"type": "nvarchar"
					},
					{
						"name": "lndg_rollout",
						"type": "nvarchar"
					},
					{
						"name": "lndg_actual_braking",
						"type": "nvarchar"
					},
					{
						"name": "pax",
						"type": "int",
						"precision": 10
					},
					{
						"name": "mission_id",
						"type": "nvarchar"
					},
					{
						"name": "updated_at",
						"type": "datetime"
					},
					{
						"name": "ADF_TIMESTAMP",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RUN_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SQL_FLIGHT_TABLE_TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_MIS_CHOICE_PAX_BAGS_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "MIS_PAX_BAGS_TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_NAVBLUE_FLIGHT_LIST_LIVE_FLTS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "NAVBLUE_FLIGHT_LIST_LIVE_FLTS"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_NAVBLUE_Flight_List_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "NAVBLUE_FLIGHT_LIST_TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_PAIRING_ITEM_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "pairing_id",
						"type": "nvarchar"
					},
					{
						"name": "pairing_item_id",
						"type": "nvarchar"
					},
					{
						"name": "pairing_item_type",
						"type": "nvarchar"
					},
					{
						"name": "flight_id",
						"type": "nvarchar"
					},
					{
						"name": "shift_name",
						"type": "nvarchar"
					},
					{
						"name": "shift_start_time",
						"type": "datetime"
					},
					{
						"name": "shift_end_time",
						"type": "datetime"
					},
					{
						"name": "shift_type",
						"type": "nvarchar"
					},
					{
						"name": "shift_is_work",
						"type": "bit"
					},
					{
						"name": "shift_is_reserve",
						"type": "bit"
					},
					{
						"name": "shift_is_sick",
						"type": "bit"
					},
					{
						"name": "shift_is_training",
						"type": "bit"
					},
					{
						"name": "shift_is_vacation",
						"type": "bit"
					},
					{
						"name": "updated_at",
						"type": "datetime"
					},
					{
						"name": "ADF_TIMESTAMP",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RUN_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_PAIRING_ITEM_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_PAIRING_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "date",
						"type": "date"
					},
					{
						"name": "end_date",
						"type": "date"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "pairing_id",
						"type": "nvarchar"
					},
					{
						"name": "position",
						"type": "nvarchar"
					},
					{
						"name": "start_date",
						"type": "date"
					},
					{
						"name": "updated_at",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "ADF_TIMESTAMP",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RUN_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_PAIRING_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_SHIFT_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "shift_id",
						"type": "nvarchar"
					},
					{
						"name": "user_id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "start_time",
						"type": "datetime"
					},
					{
						"name": "end_time",
						"type": "datetime"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "is_work",
						"type": "bit"
					},
					{
						"name": "is_reserve",
						"type": "bit"
					},
					{
						"name": "is_sick",
						"type": "bit"
					},
					{
						"name": "is_training",
						"type": "bit"
					},
					{
						"name": "is_vacation",
						"type": "bit"
					},
					{
						"name": "updated_at",
						"type": "nvarchar"
					},
					{
						"name": "ADF_TIMESTAMP",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "RUN_ID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_SHIFT_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_TEST_NAVBLUE_FLT_LIST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "TEST_NAVBLUE_FLT_LIST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_USER_CATEGORY_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_USER_CATEGORY_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_USER_TABLE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SQL tables"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "SF_USER_PROD"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_qk2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_main_blob_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "radixx-source-tcn"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_calc_data')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TEST_HTTP_SERVER",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NAVBLUE_FLT_DETAIL_TEST')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eal_edw_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "NAVBLUE_FLT_DETAIL_TEST"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MIS_Choice_paxinfo_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MIS_Choice_paxinfo_test_data_to_blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "MIS_Choice_paxinfo_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "MIS_Choice_paxdata_test_file",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Testing"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NavBlue Test SOAP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "NAVBLUE Copy XML to JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "XmlSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: text/xml;charset=UTF-8\nSOAPAction: \"http://navtech.aero/NavtechPublicService/GetFlightList\"\nContent-Length: 802\nHost: nfp.navtechinc.com:444",
									"requestBody": {
										"value": "@{replace('<SOAP-ENV:Envelope\n\txmlns:SOAP-ENV=\"http://schemas.xmlsoap.org/soap/envelope/\"\n\txmlns:NavWeb=\"urn:NavWeb\">\n   <SOAP-ENV:Header>\n\t   <o:Security\n\t   \t\tSOAP-ENV:mustUnderstand=\"1\"\n\t\t\txmlns:o=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\">\n\t\t<o:UsernameToken>\n\t\t\t<o:Username>EAL/bdavis</o:Username>\n\t\t\t<o:Password>T99oulon84@</o:Password>\n\t\t</o:UsernameToken>\n\t\t</o:Security>\n\t</SOAP-ENV:Header>\n   <SOAP-ENV:Body>\n      <NavWeb:GetFlightList>\n         <Input>\n            <User>\n               <EnvAlc>EAL</EnvAlc>\n               <UserId>bdavis</UserId>\n            </User>\n            <Input>\n               <ForDayUtc>?P1</ForDayUtc>\n            </Input>\n         </Input>\n      </NavWeb:GetFlightList>\n   </SOAP-ENV:Body>\n</SOAP-ENV:Envelope>', '?P1', pipeline().parameters.P1)}",
										"type": "Expression"
									},
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "XmlReadSettings",
									"validationMode": "none",
									"namespaces": true
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings",
									"copyBehavior": "PreserveHierarchy"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "NavBlueSourceXML",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "NAVBLUE_JSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"P1": {
						"type": "string",
						"defaultValue": "2022-03-02"
					}
				},
				"folder": {
					"name": "NavBlue"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TCN_COPY_TEST')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_qk2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "radixx-source-tcn//"
							},
							{
								"name": "Destination",
								"value": "radixx-destination-tcn//"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"modifiedDatetimeStart": {
										"value": "@pipeline().parameters.windowStart",
										"type": "Expression"
									},
									"modifiedDatetimeEnd": {
										"value": "@pipeline().parameters.windowEnd",
										"type": "Expression"
									},
									"wildcardFileName": "*"
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"skipErrorFile": {
								"fileMissing": true
							},
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_qk2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_qk2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "String"
					},
					"windowEnd": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Testing"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_qk2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TEST_CALC')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY Calc Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "POST",
									"additionalHeaders": "Content-Type: text/xml;charset=UTF-8\nSOAPAction: \"http://tempuri.org/Add\"\n",
									"requestBody": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\">\n   <soapenv:Header/>\n   <soapenv:Body>\n      <tem:Add>\n         <tem:intA>{\"@parameters('VAR_C')\"}</tem:intA>\n         <tem:intB>{\"@parameters('VAR_D')\"}</tem:intB>\n      </tem:Add>\n   </soapenv:Body>\n</soapenv:Envelope>",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Test_calc_data",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Calc_Data_Blob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"VAR_C": {
						"type": "int",
						"defaultValue": 5
					},
					"VAR_D": {
						"type": "int",
						"defaultValue": 10
					}
				},
				"variables": {
					"VAR_A": {
						"type": "String",
						"defaultValue": "10"
					},
					"VAR_B": {
						"type": "String",
						"defaultValue": "5"
					}
				},
				"folder": {
					"name": "Testing"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Test_calc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AIRPORTblobtoSQL')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Populates SF_AIRPORTS_PROD SQL table with data from blob storage.",
				"folder": {
					"name": "PROD"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SF_source_airport",
								"type": "DatasetReference"
							},
							"name": "SFAirport"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SQL_AIRPORT_TABLE",
								"type": "DatasetReference"
							},
							"name": "AIRPORTtoSQL"
						}
					],
					"transformations": [
						{
							"name": "AddWrkflwIDandTS",
							"description": "Add columns for ADF workflow ID and timestamp."
						}
					],
					"script": "parameters{\n\trun_id as string\n}\nsource(output(\n\t\tairport_id as string,\n\t\tiata_code as string,\n\t\ticao_code as string,\n\t\tfaa_code as string,\n\t\tairport_name as string,\n\t\tcity_name as string,\n\t\tstate_code as string,\n\t\tcountry_code as string,\n\t\tweather_zone as string,\n\t\tlatitude as string,\n\t\tlongitude as string,\n\t\televation_feet as string,\n\t\tiana_timezone as string,\n\t\tis_base as boolean,\n\t\tbase_initial as string,\n\t\tis_active as boolean,\n\t\tis_deleted as boolean\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdocumentForm: 'documentPerLine') ~> SFAirport\nSFAirport derive(ADF_TIMESTAMP = currentTimestamp(),\n\t\tRUN_ID = $run_id) ~> AddWrkflwIDandTS\nAddWrkflwIDandTS sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tairport_id as string,\n\t\tiata_code as string,\n\t\ticao_code as string,\n\t\tfaa_code as string,\n\t\tairport_name as string,\n\t\tcity_name as string,\n\t\tstate_code as string,\n\t\tcountry_code as string,\n\t\tweather_zone as string,\n\t\tlatitude as double,\n\t\tlongitude as double,\n\t\televation_feet as integer,\n\t\tiana_timezone as string,\n\t\tis_base as boolean,\n\t\tbase_initial as string,\n\t\tis_active as boolean,\n\t\tis_deleted as boolean,\n\t\tADF_TIMESTAMP as timestamp,\n\t\tRUN_ID as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> AIRPORTtoSQL"
				}
			},
			"dependsOn": []
		}
	]
}
{
	"name": "SQL Navblue Flight List Test",
	"properties": {
		"folder": {
			"name": "TEST"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQL_NAVBLUE_Flight_List_TEST",
						"type": "DatasetReference"
					},
					"name": "SQLNavblueFlightListTest"
				},
				{
					"dataset": {
						"referenceName": "SQL_FLIGHT_TABLE",
						"type": "DatasetReference"
					},
					"name": "SQLSFFlightProd"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "exists1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     P1START as string,",
				"     P2END as string ('2022-03-03')",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SQLNavblueFlightListTest",
				"source(output(",
				"          flight_number as string,",
				"          SCHED_DEP_DATE as date,",
				"          sched_depart_airport_id as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT flight_number, CAST(scheduled_departure AS DATE) AS \\'SCHED_DEP_DATE\\' ,sched_depart_airport_id\\nFROM dbo.SF_FLIGHT_PROD\\nWHERE aircraft_registration_number IS NOT NULL\\nAND is_canceled = \\'false\\'',",
				"     format: 'query') ~> SQLSFFlightProd",
				"SQLNavblueFlightListTest, filter1 exists(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     negate:false,",
				"     broadcast: 'auto')~> exists1",
				"derivedColumn1 filter(SCHED_DEP_DATE_STR == $P1START) ~> filter1",
				"SQLSFFlightProd derive(SCHED_DEP_DATE_STR = toString(SCHED_DEP_DATE),",
				"          SCHED_DEP_DATE_PARAM = toString(byName($P1START))) ~> derivedColumn1"
			]
		}
	}
}
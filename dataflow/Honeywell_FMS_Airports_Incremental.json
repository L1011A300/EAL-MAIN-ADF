{
	"name": "Honeywell_FMS_Airports_Incremental",
	"properties": {
		"folder": {
			"name": "Honeywell_FMS_Airports"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Honeywell_FMS_Airports_Incremental",
						"type": "DatasetReference"
					},
					"name": "HoneywellInitial"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Honeywell_FMS_Airports",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RemoveExtraColumns"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "OrderColumns"
				}
			],
			"scriptLines": [
				"parameters{",
				"     run_id as string",
				"}",
				"source(output(",
				"          RecordIndex as string,",
				"          Key as string,",
				"          Ident as string,",
				"          RevCode as string,",
				"          ProceduresExist as string,",
				"          RunwaysExist as string,",
				"          GatesExist as string,",
				"          AlternatesExist as string,",
				"          SpeedLimitCoded as string,",
				"          TransAltValid as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Elevation as string,",
				"          SpeedLimit as string,",
				"          SpeedLimitAltitude as string,",
				"          TransAltitude as string,",
				"          MaxRunwayLength as string,",
				"          RevState as string,",
				"          TrueNorth as string,",
				"          MagVar as string,",
				"          CC as string,",
				"          SidExist as string,",
				"          StarExist as string,",
				"          ApproachExist as string,",
				"          EosidExist as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'File_ID') ~> HoneywellInitial",
				"HoneywellInitial select(mapColumn(",
				"          ICAO_Code = Ident,",
				"          File_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveExtraColumns",
				"RemoveExtraColumns derive(ADF_TIMESTAMP = currentTimestamp(),",
				"          File_ID = substring(File_ID,2,10),",
				"          RUN_ID = $run_id) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          File_ID,",
				"          ICAO_Code,",
				"          ADF_TIMESTAMP,",
				"          RUN_ID",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OrderColumns",
				"OrderColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}